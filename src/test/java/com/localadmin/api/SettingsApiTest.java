/*
 * rest-api
 * An api to fetch manipulate and enter data to the Local Admin service. All Responses can be done with JSON and XML where JSON is the default. You can change the response by setting the content-type header. The downside of our XML is that we do not provide XLS for the Responses
 *
 * OpenAPI spec version: 1.1.0
 * Contact: nbrugger@student.tgm.ac.at
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.localadmin.api;

import com.localadmin.ApiException;
import com.localadmin.model.Emailsettings;
import com.localadmin.model.ErrorResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SettingsApi
 */
@Ignore
public class SettingsApiTest {

    private final SettingsApi api = new SettingsApi();

    /**
     * Add Reciver
     *
     * Adds a reciver to the email list
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addReciverTest() throws ApiException {
        String email = null;
        api.addReciver(email);

        // TODO: test validations
    }
    /**
     * Edit Email Setting
     *
     * Edit one email setting
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void editEmailSettingTest() throws ApiException {
        Emailsettings body = null;
        api.editEmailSetting(body);

        // TODO: test validations
    }
    /**
     * Get Email Settings
     *
     * Returns all email-settings   &gt; At the moment returns a array with one entry as the OAS model does not works
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEmailSettingsTest() throws ApiException {
        Boolean wholeData = null;
        Object response = api.getEmailSettings(wholeData);

        // TODO: test validations
    }
    /**
     * Get Reciver List
     *
     * Returns the list of email addresses which should be mailed by the mail bot
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReciversTest() throws ApiException {
        List<String> response = api.getRecivers();

        // TODO: test validations
    }
    /**
     * Remove reciver
     *
     * Removes the reciver from the list
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeReciverTest() throws ApiException {
        String reciver = null;
        api.removeReciver(reciver);

        // TODO: test validations
    }
    /**
     * Remove Recivers
     *
     * Remove all recivers from the list
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeReciversTest() throws ApiException {
        api.removeRecivers();

        // TODO: test validations
    }
}
