/*
 * rest-api
 * An api to fetch manipulate and enter data to the Local Admin service. All Responses can be done with JSON and XML where JSON is the default. You can change the response by setting the content-type header. The downside of our XML is that we do not provide XLS for the Responses
 *
 * OpenAPI spec version: 1.1.0
 * Contact: nbrugger@student.tgm.ac.at
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.localadmin.api;

import com.localadmin.ApiException;
import com.localadmin.model.Paths1filter17Bname7D1columnsgetresponses200contentapplication1jsonschemaitems;
import com.localadmin.model.Paths1filtersgetresponses200contentapplication1jsonschemaitemsoneOf0;
import com.localadmin.model.Paths1restaurantsgetresponses401contentapplication1jsonschema;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FiltersApi
 */
@Ignore
public class FiltersApiTest {

    private final FiltersApi api = new FiltersApi();

    /**
     * Create filter
     *
     * Create new filter
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createFilterTest() throws ApiException {
        api.createFilter();

        // TODO: test validations
    }
    /**
     * Remove filter
     *
     * Delete the specified Filter
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteFilterTest() throws ApiException {
        String name = null;
        api.deleteFilter(name);

        // TODO: test validations
    }
    /**
     * Get all filters
     *
     * The list of all filters.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllFiltersTest() throws ApiException {
        Boolean wholeData = null;
        List<Object> response = api.getAllFilters(wholeData);

        // TODO: test validations
    }
    /**
     * Get Filter
     *
     * Get the specified filter and its columes / formulas.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFilterTest() throws ApiException {
        String name = null;
        Paths1filtersgetresponses200contentapplication1jsonschemaitemsoneOf0 response = api.getFilter(name);

        // TODO: test validations
    }
    /**
     * Get filter columns
     *
     * Get all the Columns/Formulas of a filter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFilterColumnsTest() throws ApiException {
        String name = null;
        List<String> response = api.getFilterColumns(name);

        // TODO: test validations
    }
    /**
     * Remove all filters
     *
     * Remove all filters
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeAllFiltersTest() throws ApiException {
        api.removeAllFilters();

        // TODO: test validations
    }
    /**
     * Rename filter
     *
     * Change the name of a filter
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void renameFilterTest() throws ApiException {
        String name = null;
        String name2 = null;
        api.renameFilter(name, name2);

        // TODO: test validations
    }
    /**
     * Replace filter columns
     *
     * Replace the list of columns/formulas of the filter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceFilterColumnsTest() throws ApiException {
        String name = null;
        List<Paths1filter17Bname7D1columnsgetresponses200contentapplication1jsonschemaitems> body = null;
        Boolean _return = null;
        List<Paths1filter17Bname7D1columnsgetresponses200contentapplication1jsonschemaitems> response = api.replaceFilterColumns(name, body, _return);

        // TODO: test validations
    }
}
