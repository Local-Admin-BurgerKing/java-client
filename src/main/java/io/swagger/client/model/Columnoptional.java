/*
 * rest-api
 * An api to fetch manipulate and enter data to the Local Admin service. All Responses can be done with JSON and XML where JSON is the default. You can change the response by setting the content-type header. The downside of our XML is that we do not provide XLS for the Responses
 *
 * OpenAPI spec version: 1.1.0
 * Contact: nbrugger@student.tgm.ac.at
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * A column with its information
 */
@Schema(description = "A column with its information")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-20T15:33:44.001Z[GMT]")
public class Columnoptional {
  @SerializedName("hide ")
  private Boolean hide_ = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("name")
  private String name = null;

  public Columnoptional hide_(Boolean hide_) {
    this.hide_ = hide_;
    return this;
  }

   /**
   * Tells if the column should be hidden or not
   * @return hide_
  **/
  @Schema(description = "Tells if the column should be hidden or not")
  public Boolean isHide_() {
    return hide_;
  }

  public void setHide_(Boolean hide_) {
    this.hide_ = hide_;
  }

  public Columnoptional description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description for the column
   * @return description
  **/
  @Schema(description = "Description for the column")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Columnoptional name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the column which gets added
   * @return name
  **/
  @Schema(description = "The name of the column which gets added")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Columnoptional columnoptional = (Columnoptional) o;
    return Objects.equals(this.hide_, columnoptional.hide_) &&
        Objects.equals(this.description, columnoptional.description) &&
        Objects.equals(this.name, columnoptional.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hide_, description, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Columnoptional {\n");
    
    sb.append("    hide_: ").append(toIndentedString(hide_)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
