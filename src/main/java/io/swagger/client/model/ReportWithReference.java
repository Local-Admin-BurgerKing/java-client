/*
 * rest-api
 * An api to fetch manipulate and enter data to the Local Admin service. All Responses can be done with JSON and XML where JSON is the default. You can change the response by setting the content-type header. The downside of our XML is that we do not provide XLS for the Responses
 *
 * OpenAPI spec version: 1.1.0
 * Contact: nbrugger@student.tgm.ac.at
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Report1;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Represents a report with a reference to a specific restaurant
 */
@Schema(description = "Represents a report with a reference to a specific restaurant")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-11-20T15:33:44.001Z[GMT]")
public class ReportWithReference {
  @SerializedName("restaurant")
  private Integer restaurant = null;

  @SerializedName("report")
  private Report1 report = null;

  public ReportWithReference restaurant(Integer restaurant) {
    this.restaurant = restaurant;
    return this;
  }

   /**
   * A unique ID by which a restaurant is identified 
   * minimum: 0
   * @return restaurant
  **/
  @Schema(example = "4643", description = "A unique ID by which a restaurant is identified ")
  public Integer getRestaurant() {
    return restaurant;
  }

  public void setRestaurant(Integer restaurant) {
    this.restaurant = restaurant;
  }

  public ReportWithReference report(Report1 report) {
    this.report = report;
    return this;
  }

   /**
   * Get report
   * @return report
  **/
  @Schema(description = "")
  public Report1 getReport() {
    return report;
  }

  public void setReport(Report1 report) {
    this.report = report;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportWithReference reportWithReference = (ReportWithReference) o;
    return Objects.equals(this.restaurant, reportWithReference.restaurant) &&
        Objects.equals(this.report, reportWithReference.report);
  }

  @Override
  public int hashCode() {
    return Objects.hash(restaurant, report);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportWithReference {\n");
    
    sb.append("    restaurant: ").append(toIndentedString(restaurant)).append("\n");
    sb.append("    report: ").append(toIndentedString(report)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
