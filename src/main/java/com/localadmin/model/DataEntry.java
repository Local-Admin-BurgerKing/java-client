/*
 * rest-api
 * An api to fetch manipulate and enter data to the Local Admin service. All Responses can be done with JSON and XML where JSON is the default. You can change the response by setting the content-type header. The downside of our XML is that we do not provide XLS for the Responses
 *
 * OpenAPI spec version: 1.1.0
 * Contact: nbrugger@student.tgm.ac.at
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.localadmin.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.io.Serializable;
/**
 * Represents a single column in a table with a given value
 */
@Schema(description = "Represents a single column in a table with a given value")

public class DataEntry implements Serializable{
  private static final long serialVersionUID = 1L;
  @SerializedName("column")
  private String column = null;

  @SerializedName("value")
  private Integer value = null;

  public DataEntry column(String column) {
    this.column = column;
    return this;
  }

   /**
   * Represents the name of a specified column
   * @return column
  **/
  @Schema(description = "Represents the name of a specified column")
  public String getColumn() {
    return column;
  }

  public void setColumn(String column) {
    this.column = column;
  }

  public DataEntry value(Integer value) {
    this.value = value;
    return this;
  }

   /**
   * The value of the column in cents
   * @return value
  **/
  @Schema(description = "The value of the column in cents")
  public Integer getValue() {
    return value;
  }

  public void setValue(Integer value) {
    this.value = value;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataEntry dataEntry = (DataEntry) o;
    return Objects.equals(this.column, dataEntry.column) &&
        Objects.equals(this.value, dataEntry.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(column, value);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataEntry {\n");
    
    sb.append("    column: ").append(toIndentedString(column)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
