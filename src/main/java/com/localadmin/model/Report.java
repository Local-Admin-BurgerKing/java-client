/*
 * rest-api
 * An api to fetch manipulate and enter data to the Local Admin service. All Responses can be done with JSON and XML where JSON is the default. You can change the response by setting the content-type header. The downside of our XML is that we do not provide XLS for the Responses
 *
 * OpenAPI spec version: 1.1.0
 * Contact: nbrugger@student.tgm.ac.at
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.localadmin.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.localadmin.model.DataEntry;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
/**
 * Represents a data row/entry in a restaurants table
 */
@Schema(description = "Represents a data row/entry in a restaurants table")

public class Report implements Serializable{
  private static final long serialVersionUID = 1L;
  @SerializedName("date")
  private LocalDate date = null;

  @SerializedName("data")
  private List<DataEntry> data = null;

  @SerializedName("comment")
  private String comment = null;

  public Report date(LocalDate date) {
    this.date = date;
    return this;
  }

   /**
   * Represents a reference to a data row/entry in a restaurants table
   * @return date
  **/
  @Schema(description = "Represents a reference to a data row/entry in a restaurants table")
  public LocalDate getDate() {
    return date;
  }

  public void setDate(LocalDate date) {
    this.date = date;
  }

  public Report data(List<DataEntry> data) {
    this.data = data;
    return this;
  }

  public Report addDataItem(DataEntry dataItem) {
    if (this.data == null) {
      this.data = new ArrayList<>();
    }
    this.data.add(dataItem);
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @Schema(description = "")
  public List<DataEntry> getData() {
    return data;
  }

  public void setData(List<DataEntry> data) {
    this.data = data;
  }

  public Report comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * A comment for the daily report
   * @return comment
  **/
  @Schema(description = "A comment for the daily report")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Report report = (Report) o;
    return Objects.equals(this.date, report.date) &&
        Objects.equals(this.data, report.data) &&
        Objects.equals(this.comment, report.comment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(date, data, comment);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Report {\n");
    
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
