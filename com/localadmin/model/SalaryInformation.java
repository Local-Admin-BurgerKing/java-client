/*
 * rest-api
 * An api to fetch manipulate and enter data to the Local Admin service. All Responses can be done with JSON and XML where JSON is the default. You can change the response by setting the content-type header. The downside of our XML is that we do not provide XLS for the Responses
 *
 * OpenAPI spec version: 1.1.0
 * Contact: nbrugger@student.tgm.ac.at
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.localadmin.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.localadmin.model.Paths1restaurantsgetresponses200contentapplication1jsonschemaitemsoneOf1propertiesnumber;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.time.LocalDate;
import java.io.Serializable;
import javax.xml.bind.annotation.*;
/**
 * Detailed information about the salary level. The optional values are not present if there are no changes
 */
@Schema(description = "Detailed information about the salary level. The optional values are not present if there are no changes")
@XmlRootElement(name = "SalaryInformation")
@XmlAccessorType(XmlAccessType.FIELD)

public class SalaryInformation implements Serializable{
  private static final long serialVersionUID = 1L;
  @XmlElement(name = "name")
  @SerializedName("name")
  private String name = null;

  @XmlElement(name = "first_change")
  @SerializedName("first_change")
  private LocalDate firstChange = null;

  @XmlElement(name = "last_change")
  @SerializedName("last_change")
  private LocalDate lastChange = null;

  @XmlElement(name = "entry_count")
  @SerializedName("entry_count")
  private Integer entryCount = 0;

  @XmlElement(name = "last_value")
  @SerializedName("last_value")
  private Long lastValue = null;

  @XmlElement(name = "restaurant")
  @SerializedName("restaurant")
  private Paths1restaurantsgetresponses200contentapplication1jsonschemaitemsoneOf1propertiesnumber restaurant = null;

  public SalaryInformation name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the salary
   * @return name
  **/
  @Schema(required = true, description = "The name of the salary")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public SalaryInformation firstChange(LocalDate firstChange) {
    this.firstChange = firstChange;
    return this;
  }

   /**
   * The date of the first change in the salary level. Or the chonoligical first entry
   * @return firstChange
  **/
  @Schema(description = "The date of the first change in the salary level. Or the chonoligical first entry")
  public LocalDate getFirstChange() {
    return firstChange;
  }

  public void setFirstChange(LocalDate firstChange) {
    this.firstChange = firstChange;
  }

  public SalaryInformation lastChange(LocalDate lastChange) {
    this.lastChange = lastChange;
    return this;
  }

   /**
   * The date of the last change in the salary level. Or the chonoligical last entry
   * @return lastChange
  **/
  @Schema(description = "The date of the last change in the salary level. Or the chonoligical last entry")
  public LocalDate getLastChange() {
    return lastChange;
  }

  public void setLastChange(LocalDate lastChange) {
    this.lastChange = lastChange;
  }

  public SalaryInformation entryCount(Integer entryCount) {
    this.entryCount = entryCount;
    return this;
  }

   /**
   * The number of changes for this salary
   * minimum: 0
   * @return entryCount
  **/
  @Schema(example = "12", required = true, description = "The number of changes for this salary")
  public Integer getEntryCount() {
    return entryCount;
  }

  public void setEntryCount(Integer entryCount) {
    this.entryCount = entryCount;
  }

  public SalaryInformation lastValue(Long lastValue) {
    this.lastValue = lastValue;
    return this;
  }

   /**
   * The value of the last and so current valid change
   * minimum: 0
   * @return lastValue
  **/
  @Schema(example = "1035", description = "The value of the last and so current valid change")
  public Long getLastValue() {
    return lastValue;
  }

  public void setLastValue(Long lastValue) {
    this.lastValue = lastValue;
  }

  public SalaryInformation restaurant(Paths1restaurantsgetresponses200contentapplication1jsonschemaitemsoneOf1propertiesnumber restaurant) {
    this.restaurant = restaurant;
    return this;
  }

   /**
   * Get restaurant
   * @return restaurant
  **/
  @Schema(description = "")
  public Paths1restaurantsgetresponses200contentapplication1jsonschemaitemsoneOf1propertiesnumber getRestaurant() {
    return restaurant;
  }

  public void setRestaurant(Paths1restaurantsgetresponses200contentapplication1jsonschemaitemsoneOf1propertiesnumber restaurant) {
    this.restaurant = restaurant;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SalaryInformation salaryInformation = (SalaryInformation) o;
    return Objects.equals(this.name, salaryInformation.name) &&
        Objects.equals(this.firstChange, salaryInformation.firstChange) &&
        Objects.equals(this.lastChange, salaryInformation.lastChange) &&
        Objects.equals(this.entryCount, salaryInformation.entryCount) &&
        Objects.equals(this.lastValue, salaryInformation.lastValue) &&
        Objects.equals(this.restaurant, salaryInformation.restaurant);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, firstChange, lastChange, entryCount, lastValue, restaurant);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SalaryInformation {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    firstChange: ").append(toIndentedString(firstChange)).append("\n");
    sb.append("    lastChange: ").append(toIndentedString(lastChange)).append("\n");
    sb.append("    entryCount: ").append(toIndentedString(entryCount)).append("\n");
    sb.append("    lastValue: ").append(toIndentedString(lastValue)).append("\n");
    sb.append("    restaurant: ").append(toIndentedString(restaurant)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
